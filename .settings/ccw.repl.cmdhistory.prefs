#Sun Dec 18 17:58:07 GMT 2011
cmdhistory=[";; Loading file src\\\\problem03.clj" "(ceil 1.1)" "(clojure.contrib.math/ceil 1.1)" "(int (clojure.contrib.math/ceil 1.1))" "(int (clojure.contrib.math/ceil (clojure.contrib.math/sqrt 600851475143)))" ";; Loading file src\\\\problem03.clj" "(int (clojure.contrib.math/ceil (clojure.contrib.math/sqrt nbr)))" "(int (clojure.contrib.math/ceil (clojure.contrib.math/sqrt 10)))" "(/ 600851475143 2)" ";; Loading file src\\\\problem03.clj" "(first (divisors 600851475143))" "(first (problem03/divisors 600851475143))" ";; Loading file src\\\\problem03.clj" "(first (problem03/divisors 600851475143))" ";; Loading file src\\\\problem03.clj" "(take 10(lazy-stream-inc 10000000000))" "(take 10 (problem03/lazy-stream-inc 10000000000))" ";; Loading file src\\\\problem03.clj" "(problem03/divisors 10)" ";; Loading file src\\\\problem03.clj" "(problem03/divisors 30)" ";; Loading file src\\\\problem03.clj" "(get-factors 6552)" "(problem03/get-factors 6552)" ";; Loading file src\\\\problem03.clj" "(problem03/get-factors 6552)" ";; Loading file src\\\\problem03.clj" "(problem03/get-factors 6552)" "(problem03/get-factors 15265524)" "(problem03/get-factors 60085147)" ";; Loading file src\\\\problem03.clj" "(problem03/get-factors 60085147)" "(problem03/get-factors 600851475143)" "(problem03/get-factors 13195)" ";; Loading file src\\\\problem03.clj" "(problem03/get-factors 13195)" ";; Loading file src\\\\problem03.clj" "(problem03/get-factors 13195)" "(problem03/get-factors 600851475143)" "(reduce max (71 839 1471 6857))" "(reduce max '(71 839 1471 6857))" ";; Loading file src\\\\problem03.clj" ";; Loading file src\\\\problem04.clj" ";; Loading file src\\\\problem03.clj" ";; Loading file src\\\\problem04.clj" "(sort '(5 2))" "(distinct '(1 2) '(1 2) '(2 3))" "(distinct (list '(1 2) '(1 2) '(2 3)))" "(reverse \\"abcde\\")" "(\= \\"aba\\" \\"aba\\")" "(\= \\"aba\\" (reverse \\"aba\\"))" "(doc reverse\\n     )" "(doc distinct)" "(.toString (reverse \\"aba\\"))" "(str 123)" "(reverse (str 123))" "(str (reverse (str 123)))" "(join (reverse (str 123)))" "(doc join\\n     )" "(reverse (reverse \\"123\\"))" "(str (reverse 123))" "(str (reverse \\"123\\"))" "(\= (reverse \\"aba\\") (reverse (reverse \\"aba\\")))" ";; Loading file src\\\\problem04.clj" "(problem04/is-palindrome? 999992299999)" "(problem04/is-palindrome? 999992291999)" "(map (fn[n] (list n n)) '(1 2 3))" "(map (fn[n] (list (list n n))) '(1 2 3))" " (mapcat (fn[n] (list (list n n))) '(1 2 3))" "(mapcat \\n  (fn[n] (list \\n           (mapcat \\n             (fn[y] (list n y)) \\n             '(1 2 3)))) \\n  '(1 2 3))" "(mapcat \\r\\n     (fn[n] (list \\r\\n              (map \\r\\n                (fn[y] (list n y)) \\r\\n                '(1 2 3)))) \\r\\n     '(1 2 3))" "(mapcat \\r\\n        (fn[n] (list \\r\\n                 (map \\r\\n                   (fn[y] (sort (list n y))) \\r\\n                   '(1 2 3)))) \\r\\n        '(1 2 3))" "(map\\r\\n           (fn[n] (list \\r\\n                    (map \\r\\n                      (fn[y] (sort (list n y))) \\r\\n                      '(1 2 3)))) \\r\\n           '(1 2 3))" "(mapcat\\r\\n  (fn[n] (list \\r\\n                       (mapcat\\r\\n                         (fn[y] (sort (list n y))) \\r\\n                         '(1 2 3)))) \\r\\n              '(1 2 3))" "(mapcat\\r\\n    (fn[n] \\r\\n             (mapcat\\r\\n    (fn[y] (sort (list n y))) \\r\\n    '(1 2 3)))\\r\\n'(1 2 3))" ";; Loading file src\\\\problem04.clj" ";; Loading file src\\\\problem03.clj" ";; Loading file src\\\\problem06.clj" "(lazy-stream 10 1)" "(lazy-stream 10)" ";; Loading file src\\\\problem06.clj"]
eclipse.preferences.version=1
